apiVersion: batch/v1
kind: Job
metadata:
  name: kafka-perf-test-client-multi
  namespace: kafka
  labels:
    app: kafka-perf-test-client
spec:
  template:
    metadata:
      labels:
        app: kafka-perf-test-client
    spec:
      restartPolicy: Never # Important for Jobs: ensures the pod doesn't restart on completion
      containers:
      - name: kafka-perf-client
        image: confluentinc/cp-kafka:7.5.0
        command: ["/bin/bash", "-c"]
        args:
          - |
            #!/bin/bash

            # Configuration
            KAFKA_BROKERS="my-cluster-kafka-bootstrap:9092"  # Replace with your Kafka broker list (e.g., localhost:9092)
            TOPIC_NAME="my-topic-1"      # Replace with the topic you want to test
            MESSAGE_SIZE=1024                 # Message size in bytes
            NUM_MESSAGES=1000                # Number of messages to send per test
            PRODUCER_SCRIPT="kafka-producer-perf-test" # Assuming this script is in your PATH or current directory
            INSTANCE_LIMIT=3
            SPAWN_INTERVAL=60                 # Interval in seconds

            echo "Starting Kafka Producer Performance Test Spawner..."

            instance_count=0

            while [ "$instance_count" -lt "$INSTANCE_LIMIT" ]; do
              instance_count=$((instance_count + 1))
              timestamp=$(date +%Y%m%d_%H%M%S)
              log_file="/tmp/producer_perf_test_${timestamp}_instance${instance_count}.log"

              echo "Spawning instance $instance_count at $(date) and logging to $log_file..."

              # Run the Kafka producer performance test in the background and redirect output to a log file
              nohup "$PRODUCER_SCRIPT" \
                --broker-list "$KAFKA_BROKERS" \
                --topic "$TOPIC_NAME" \
                --message-size "$MESSAGE_SIZE" \
                --num-messages "$NUM_MESSAGES" \
                --producer-props acks=1 \
                > "$log_file" 2>&1 &

              echo "Instance $instance_count spawned with PID $!."

              if [ "$instance_count" -lt "$INSTANCE_LIMIT" ]; then
                echo "Waiting $SPAWN_INTERVAL seconds before spawning the next instance..."
                sleep "$SPAWN_INTERVAL"
              fi
            done

            echo "Reached the limit of $INSTANCE_LIMIT instances. Spawning complete."
        env:
          # Example environment variables if you need to pass dynamic values
          - name: KAFKA_BOOTSTRAP_SERVERS
            value: my-kafka-cluster-kafka-bootstrap:9092 # Internal service name and port
          - name: KAFKA_TOPIC
            value: my-topic-1
          # If using TLS/SCRAM, you'd need to mount secrets for certificates/passwords
          # and reference them here or in a separate client.properties file.
        resources:
          requests:
            memory: "2Gi"
            cpu: "1"
          limits:
            memory: "4Gi"
            cpu: "2"
